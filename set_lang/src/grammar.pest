main = _{ SOI ~ (term ~ ".")* ~ EOI }

term = _{ definition | and_op }

and_op = { or_op ~ ("and" ~ or_op)* }
or_op = { complement_term ~ ("or" ~ complement_term)* }
complement_term = _{ complement | compare | arith }
complement = { "!" ~ compare | "!" ~ arith }
compare = { arith ~ compare_op ~ arith }
compare_op = _{ ne_sym | eq_sym | le_sym | lt_sym | ge_sym | gt_sym }

lt_sym = { "<" }
le_sym = { "<=" | "≤" }
gt_sym = { ">" }
ge_sym = { ">=" | "≥" }
eq_sym = { "=" }
ne_sym = { "!=" | "≠" }

conj_sym = _{ "&" | "/\\" | "∧" | "and" }
disj_sym = { "|" | "\\/" | "∨" | "or" }

definition = { "Let" ~ var ~ is ~ term }

arith = _{ negate | add }
negate = { "-" ~ add }
add = { sub ~ ("+" ~ sub)* }
sub = { mul ~ ("-" ~ mul)* }
mul = { div ~ ("*" ~ div)* }
div = { mod_term ~ ("/" ~ mod_term)* }
mod_term = { exp_term ~ ("%" ~ exp_term)* }

exp_term = _{ exp | factorial_term }
exp = { factorial_term ~ "^" ~ factorial_term }

factorial_term = _{ factorial | app }
factorial = { app ~ "!" }

app = _{ call | image | atom }

call = { atom ~ "(" ~ (term ~ ("," ~ term)*)? ~ ")" }
image = { atom ~ "[" ~ term ~ "]" }

atom = _{ int
        | "(" ~ term ~ ")"
        | finset | rangeset | rangeset_step
        | list
        | fun_single_arg | fun_multi_arg
        | var
        }

fun_single_arg = { var ~ "|->" ~ term }
fun_multi_arg = { "(" ~ var ~ ("," ~ var)* ~ ")" ~ "|->" ~ term }

finset = { "{" ~ (term ~ ("," ~ term)*)? ~ "}" }
list = { "[" ~ (term ~ ("," ~ term)*)? ~ "]" }
rangeset = { "{" ~ term ~ "..." ~ term ~ "}" }
rangeset_step = { "{" ~ term ~ "," ~ term ~ "..." ~ term ~ "}" }

int = @{ "-"? ~ ASCII_DIGIT+ }

is = _{ "are" | "is" | "∈" | "be" | ":=" }

WHITESPACE = _{ " " | "\t" | "\n" | "\r" }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }

special = { "ℕ" | "𝕀" | "ℙ" | "ℂ" | "ℚ" | "ω" | "ℝ" | "π"
          | "σ" | "τ" | "Π" | "ξ" | "μ" | "δ" | "θ" | "γ"
          | "β" | "α" | "$" | "⋃" | "⋂" | "_" }
start_char = { ASCII_ALPHA | special }
char = { ASCII_ALPHANUMERIC | special }
var = @{ start_char ~ char* }

